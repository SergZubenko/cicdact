name: Java CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Set up JDK 11
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Cache Maven packages
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2

    # Run tests
    - name: Run tests
      run: mvn test

    - name: Extract version
      id: set_variables
      run: |
        echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        echo "ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
        echo "JAR_NAME=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar" >> $GITHUB_ENV
        echo "DOCKER_GROUP=sergzubenko" >> $GITHUB_ENV
        

    - name: Build and Push Docker Image
      run: |
        docker build -t   $DOCKER_GROUP/$ARTIFACT_ID:$PROJECT_VERSION -t  $DOCKER_GROUP/$ARTIFACT_ID:latest --build-arg JAR_FILE=$JAR_NAME .
        docker push  $DOCKER_GROUP/$ARTIFACT_ID:$PROJECT_VERSION
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

